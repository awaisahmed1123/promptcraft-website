---
// src/pages/prompts.astro
import MainLayout from '../layouts/MainLayout.astro';
import PromptCard from '../components/PromptCard.astro';
import { allPrompts } from '../data/prompts.js';
---

<MainLayout>
  <div class="container">
    <div class="page-header">
      <h1>Explore All Prompts</h1>
      <p>Your ultimate library for creative AI image generation.</p>
    </div>

    <div class="filter-container">
      <button class="filter-btn active" data-category="all">All</button>
      <button class="filter-btn" data-category="Men">Men</button>
      <button class="filter-btn" data-category="Women">Women</button>
      <button class="filter-btn" data-category="Kids">Kids</button>
      <button class="filter-btn" data-category="Couples">Couples</button>
      <button class="filter-btn" data-category="Other">Other</button>
    </div>

    <div class="prompts-grid">
      {[...allPrompts].reverse().map(p => (
        <div class="prompt-card-wrapper" data-category={p.category}>
          <PromptCard 
            imgSrc={p.imgSrc}
            prompt={p.prompt}
            createdAt={p.createdAt}
          />
        </div>
      ))}
    </div>

  </div>
</MainLayout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  .page-header {
    text-align: center;
    padding: 4rem 0 2rem 0;
  }
  .page-header h1 { font-size: 3rem; margin-bottom: 1rem; }
  .page-header p { font-size: 1.2rem; color: #b3b3b3; }

  .filter-container {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 3rem;
  }
  .filter-btn {
    background-color: #1e1e1e;
    color: #a0a0a0;
    border: 1px solid #333;
    padding: 0.6rem 1.2rem;
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 700;
    font-family: 'Montserrat', sans-serif;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  .filter-btn:hover {
    background-color: #333;
    color: #fff;
  }
  .filter-btn.active {
    background-color: #FFBF00;
    color: #121212;
    border-color: #FFBF00;
  }

  .prompts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2rem;
    padding-bottom: 5rem;
  }
  
  .prompt-card-wrapper {
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
</style>

<script>
  const filterButtons = document.querySelectorAll('.filter-btn');
  const promptCards = document.querySelectorAll('.prompt-card-wrapper');

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const category = button.getAttribute('data-category');

      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      promptCards.forEach(card => {
        const cardCategory = card.getAttribute('data-category');
        
        if (category === 'all' || cardCategory === category) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });
  });
</script>